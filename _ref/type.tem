(page "Type handling"
(text "Arc has functions to convert types and to determine the type of an object.")
(newtable "Type handling"
  (op annotate "type obj" "Tags the object with the given type."
  (tests (type (annotate 'mac car)))
  ) 
  (op rep "obj" "Returns the underlying object for an annotated object" (tests (rep whilet)))
(def sym "x" "Coerces x to a 'sym." (tests (sym "a")))
  (op coerce "obj type [args]" "Coerces object to a new type.  A char can be
  coerced to int, string, or sym.  A number can be coerced to int, char, or string
  (of specified base).  A string can be coerced to sym, cons (char list), or int (of
  specified base).  A list of characters can be coerced to a string.  A symbol
  can be coerced to a string." 
    (tests (coerce "a" 'sym)
           "(coerce 65 'char)"
	   "(coerce 65 'int 2)"
	   (coerce "abc" 'cons)) )
  (op int "x [base]" "Coerces x to an integer.  New in arc3." (tests (int "3.14") (int "1111" 2) (int #\a))) 
  (op type "object" "Returns the type of an object (as a symbol).
  Possibilities are cons, sym, fn, char, string, int, num, table, output,
  input, socket, exception, or mac." 
    (tests (type 1) (type car)))) 
)
